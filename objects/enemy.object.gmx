<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>enemy_sprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Variables
LEFT = -1;
TURNAROUND = -1;

dir = LEFT;
movespeed = 3;
grav = 0.2;
hsp = 0;
vsp = 0;
fearofheights = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Define Movement and Collision
hsp = dir * movespeed;
vsp += grav;

// Horizontal Collision
if ( place_meeting(x+hsp, y, wall) ) {
     while( !place_meeting(x + sign(hsp), y, wall) ) {
        x += sign(hsp);
     }
     hsp = 0;
     
     dir *= -1;
}
x += hsp;

// Vertical Collision
if ( place_meeting(x, y+vsp , wall) ) {
     while( !place_meeting(x, y + sign(vsp), wall) ) {
        y += sign(vsp);
     }
     vsp = 0;
     
     // Fear of Heights
     if (fearofheights) &amp;&amp; !position_meeting(x+(sprite_width/2)*dir, y+(sprite_height/2)+8, wall) {
        dir *= -1
     } //else if ( (fearofheights) &amp;&amp; !position_meeting( (x+sprite_width/2), y+(sprite_height/2)+8, wall) ){
        //dir *= TURNAROUND;
     //}
}
y += vsp;

// Enemy Collision
if ( place_meeting(x, y , hero) ) {
    // Are we colliding from the top?
    if (hero.y &lt; y-16) {
        // Bounce whenenver he lands on top.
        with (hero) vsp = -jumpspeed;
        instance_destroy();
    } else {
        // Destroy the player. --&gt;was game_restart()
        scr_death();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
