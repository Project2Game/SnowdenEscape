<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_screen</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>number_of_documents = 2;

key = 'encrypt.exe';
exit_key = "exit";
key_found = 0;
header_text = "admin@nsa:~$ "
typed_text = "";
keyboard_key = -1;
keyboard_string = "";
line = 1;
random_text = 0;
i = 0;
for(i=0;i&lt;26;i++) {
randomize();
string_line[i] = "";
random_text_constant = 2;
random_text_c = 0;

}
another_room = 0;
string_line[0] = 'Welcome to your terminal. From here you can encrypt your collected documents';
line++;
string_line[1] = 'Instructions for encryption:';
line++;
string_line[2] = '1. Type "encrypt.exe" to begin encryption process.';
line++;
string_line[3] = '2. Connect your PC to the encryption server by connecting the wires between them.';
line++;
string_line[4] = '3. Clicking on the wires will cause them to rotate.';
line++;
string_line[5] = '4. Hurry! You have limited time to encrypt the documents before being shut down!';
line++
string_line[6] = '(Hint) Type "exit" to leave the terminal';
line++
string_line[7] = '';
line++
wait = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>random_text = 0;
another_room = 1;
room_goto(rm_hack_game);
wait = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>documents_collected = global.lvl_1_docs_collected;
/*
random_text_c++;
random_text_c = random_text_c%60;
if(random_text==1) {
    if(random_text_c%random_text_constant==0) {
        line++;
        if(line&gt;30) {
            for(i=0;i&lt;29;i++) {
                string_line[i] = string_line[i+1];
            }
            line = line-1;
        }
        phrase = "";
        for(i=0;i&lt;110-round(random(80));i++) {
            
            phrase_option1 = string(choose("a","b","c","d","e","f","g","h","i","j","k","l"));
            phrase_option2 = string(choose("m","n","o","p","q","r","s","t","u","v","w","x"));
            phrase_option3 = string(choose("y","z",1,2,3,4,5,6,7,8,9,0));
            phrase += string(choose(phrase_option1,phrase_option2,phrase_option3));
            //phrase += string(choose("a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z",1,2,3,4,5,6,7,8,9,0));
        }
        string_line[line-1] = phrase;
    }
}
*/
if(another_room==1) {
    keyboard_lastkey = -1;
    keyboard_string = "";
    if(global.terminal==1)
        another_room=0;
}
if (wait==0) {
    if(random_text==1) {
        
        key_found = 0;
        keyboard_lastkey = -1;
        keyboard_string = "";
    }
    else {
        if(key_found==0) {
            if (keyboard_lastkey != -1) {
                   if(keyboard_lastkey==vk_enter) {
                        if(typed_text==exit_key) {
                            another_room = 1;
                            line++;
                            if(line&gt;26) {
                                for(i=0;i&lt;25;i++) {
                                    string_line[i] = string_line[i+1];
                                }
                                line = line-1;
                            }
                        
                            typed_text = "";
                            string_line[line-1] = header_text + typed_text;
                            keyboard_lastkey = -1;
                            room_goto(rm_lvl_1);
                        }
                        else if(typed_text==key) {
                            if(documents_collected&gt;1)
                                key_found = 1;
                            else {
                                line++;
                                if(line&gt;26) {
                                    for(i=0;i&lt;25;i++) {
                                        string_line[i] = string_line[i+1];
                                    }
                                    line = line-1;
                                }
                                string_line[line-1] = "Not enough documents collected...";
                                line++;
                                if(line&gt;26) {
                                    for(i=0;i&lt;25;i++) {
                                        string_line[i] = string_line[i+1];
                                    }
                                    line = line-1;
                                }
                                
                                typed_text = "";
                                string_line[line-1] = header_text + typed_text;
                                keyboard_lastkey = -1;
                            }
                        }
                        else {
                        line++;
                        if(line&gt;26) {
                            for(i=0;i&lt;25;i++) {
                                string_line[i] = string_line[i+1];
                            }
                            line = line-1;
                        }
                        
                        typed_text = "";
                        string_line[line-1] = header_text + typed_text;
                        
                        keyboard_lastkey = -1;
                        }
                        
                   }
                   
                   else if(keyboard_lastkey==vk_backspace) {
                         {
                            typed_text = string_delete(typed_text,string_length(typed_text),1);
                            keyboard_lastkey = -1;
                            string_line[line-1] = header_text + typed_text;
                        }
                   
                   }
                   else {
                        if(string_length(typed_text)&lt;70)
                            typed_text += keyboard_string;
                        keyboard_string = "";
                        keyboard_lastkey = -1;
                        string_line[line-1] = header_text + typed_text;
                   }
            }
        }
        else {
            line++;
            if(line&gt;26) {
                for(i=0;i&lt;25;i++) {
                    string_line[i] = string_line[i+1];
                }
                line = line-1;
            }
            string_line[line-1] = "Attempting to encrypt documents " + string(documents_collected)+"/"+string(number_of_documents)+"...";
            line++;
            if(line&gt;26) {
                for(i=0;i&lt;25;i++) {
                    string_line[i] = string_line[i+1];
                }
                line = line-1;
            }
            
            typed_text = "";
            string_line[line-1] = "";
            random_text = 1;
            alarm[0] = 60;
        }
    }
}
else {
    if(global.solved==-1) {
        another_room = 0;
        string_line[line-1] = "Failed to encrypt the files";
        line++;
        if(line&gt;26) {
            for(i=0;i&lt;25;i++) {
                string_line[i] = string_line[i+1];
            }
            line = line-1;
        }
        typed_text = "";
        string_line[line-1] = header_text;
        wait = 0;
    }
    else if(global.solved==1) {
        another_room = 0;
        string_line[line-1] = "Encryption of files completed!";
        line++;
        if(line&gt;26) {
            for(i=0;i&lt;25;i++) {
                string_line[i] = string_line[i+1];
            }
            line = line-1;
        }
        typed_text = "";
        string_line[line-1] = header_text;
        wait = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();


draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_color(c_green);
draw_set_font(fnt_screen_text);
text = string_line[0];
for(i=1;i&lt;26;i++) {

text +="
"+string_line[i];

}
draw_text(x,y,text);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
