<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_up</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wall_buffer = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//CODE FOR DEBUG
    if(keyboard_check_pressed(ord('L'))){
        instance_destroy();
    }   
    if(keyboard_check_pressed(ord('H')))
        global.lvl_1_docs_collected++;
//-------------------------------------------------------------    
//LoS code

        global.dirx_edward = obj_edward.x;
        global.diry_edward = obj_edward.y;    
    



//Collsion with PC and transitioning to terminal room
if (distance_to_object(obj_pc) &lt; 10) {
    if(keyboard_check_pressed(ord('F'))){
        global.terminal = 1;
        room_goto(rm_terminal);
    }
        
    
}

/// Wall Collision 
// Horizontal Collision
if ( place_meeting(x+hspeed- wall_buffer, y, obj_wall) ) {
     while( !place_meeting(x+sign(hspeed) - wall_buffer, y, obj_wall) ) {
        x += sign(hspeed);
     }
     hspeed = 0;
}
// Vertical Collision
if ( place_meeting(x, y+vspeed- wall_buffer, obj_wall) ) {
     while( !place_meeting(x, y + sign(vspeed) - wall_buffer, obj_wall) ) {
        y += sign(vspeed);
     }
     vspeed = 0;
}
// Horizontal Collision
if ( place_meeting(x+hspeed+ wall_buffer, y, obj_wall) ) {
     while( !place_meeting(x + sign(hspeed) + wall_buffer , y, obj_wall) ) {
        x += sign(hspeed);
     }
     hspeed = 0;
}
// Vertical Collision
if ( place_meeting(x, y+vspeed+ wall_buffer, obj_wall) ) {
     while( !place_meeting(x, y+sign(vspeed) + wall_buffer, obj_wall) ) {
        y += sign(vspeed);
     }
     vspeed = 0;
}

y += vspeed;
x += hspeed;
//Collsion with enemy
if (distance_to_object(obj_guard) &lt; 9) {
 x=32;
 y=32;
 global.lvl_1_docs_collected=0;
 with(obj_document) {
    read = 0;
 }
 switch(global.level) {
    case 0: room_goto(rm_intro_exposition); break;
    case 1: room_goto(rm_exposition_2); break;
    case 2: room_goto(rm_exposition_3); break;
    }
}
if (distance_to_object(obj_guard_path1) &lt; 9) {
 x=32;
 y=32;
 global.lvl_1_docs_collected=0;
 with(obj_document) {
    read = 0;
 }
 switch(global.level) {
    case 0: room_goto(rm_intro_exposition); break;
    case 1: room_goto(rm_exposition_2); break;
    case 2: room_goto(rm_exposition_3); break;
}
}
if (distance_to_object(obj_guard_path2) &lt; 9) {
 x=32;
 y=32;
 global.lvl_1_docs_collected=0;
 with(obj_document) {
    read = 0;
 }
 switch(global.level) {
    case 0: room_goto(rm_intro_exposition); break;
    case 1: room_goto(rm_exposition_2); break;
    case 2: room_goto(rm_exposition_3); break;
}
}
if (distance_to_object(obj_guard_path3) &lt; 9) {
 x=32;
 y=32;
 global.lvl_1_docs_collected=0;
 with(obj_document) {
    read = 0;
 }
 switch(global.level) {
    case 0: room_goto(rm_intro_exposition); break;
    case 1: room_goto(rm_exposition_2); break;
    case 2: room_goto(rm_exposition_3); break;
}
}

if (distance_to_object(obj_guard_path4) &lt; 9) {
 x=32;
 y=32;
 global.lvl_1_docs_collected=0;
 with(obj_document) {
    read = 0;
 }
 switch(global.level) {
    case 0: room_goto(rm_intro_exposition); break;
    case 1: room_goto(rm_exposition_2); break;
    case 2: room_goto(rm_exposition_3); break;
}
}

if (distance_to_object(obj_guard_path5) &lt; 9) {
 x=32;
 y=32;
 global.lvl_1_docs_collected=0;
 with(obj_document) {
    read = 0;
 }
 switch(global.level) {
    case 0: room_goto(rm_intro_exposition); break;
    case 1: room_goto(rm_exposition_2); break;
    case 2: room_goto(rm_exposition_3); break;
}
}

if (distance_to_object(obj_guard_path6) &lt; 9) {
 x=32;
 y=32;
 global.lvl_1_docs_collected=0;
 with(obj_document) {
    read = 0;
 }
 switch(global.level) {
    case 0: room_goto(rm_intro_exposition); break;
    case 1: room_goto(rm_exposition_2); break;
    case 2: room_goto(rm_exposition_3); break;
}
}

if (distance_to_object(obj_guard_path7) &lt; 9) {
 x=32;
 y=32;
 global.lvl_1_docs_collected=0;
 with(obj_document) {
    read = 0;
 }
 switch(global.level) {
    case 0: room_goto(rm_intro_exposition); break;
    case 1: room_goto(rm_exposition_2); break;
    case 2: room_goto(rm_exposition_3); break;
}
}

if (distance_to_object(obj_guard_path8) &lt; 9) {
 x=32;
 y=32;
 global.lvl_1_docs_collected=0;
 with(obj_document) {
    read = 0;
 }
 switch(global.level) {
    case 0: room_goto(rm_intro_exposition); break;
    case 1: room_goto(rm_exposition_2); break;
    case 2: room_goto(rm_exposition_3); break;
}
}

if (distance_to_object(obj_guard_path9) &lt; 9) {
 x=32;
 y=32;
 global.lvl_1_docs_collected=0;
 with(obj_document) {
    read = 0;
 }
 switch(global.level) {
    case 0: room_goto(rm_intro_exposition); break;
    case 1: room_goto(rm_exposition_2); break;
    case 2: room_goto(rm_exposition_3); break;
}
}

if (distance_to_object(obj_guard_path10) &lt; 9) {
 x=32;
 y=32;
 global.lvl_1_docs_collected=0;
 with(obj_document) {
    read = 0;
 }
 switch(global.level) {
    case 0: room_goto(rm_intro_exposition); break;
    case 1: room_goto(rm_exposition_2); break;
    case 2: room_goto(rm_exposition_3); break;
}
}

if (distance_to_object(obj_guard_path11) &lt; 9) {
 x=32;
 y=32;
 global.lvl_1_docs_collected=0;
 with(obj_document) {
    read = 0;
 }
 switch(global.level) {
    case 0: room_goto(rm_intro_exposition); break;
    case 1: room_goto(rm_exposition_2); break;
    case 2: room_goto(rm_exposition_3); break;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_pc">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="87">
      <action>
        <libid>1</libid>
        <id>104</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_vspeed</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>-2</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="83">
      <action>
        <libid>1</libid>
        <id>104</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_vspeed</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="68">
      <action>
        <libid>1</libid>
        <id>103</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_hspeed</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="65">
      <action>
        <libid>1</libid>
        <id>103</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_hspeed</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>-2</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="87">
      <action>
        <libid>1</libid>
        <id>104</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_vspeed</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="83">
      <action>
        <libid>1</libid>
        <id>104</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_vspeed</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="68">
      <action>
        <libid>1</libid>
        <id>103</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_hspeed</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="65">
      <action>
        <libid>1</libid>
        <id>103</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_hspeed</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
