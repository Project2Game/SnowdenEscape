<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pipe_line</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>position_line = 0; //Horizontal = 0, Vertical = 1
rotate = 0;
rotate_angle = 90;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(rotate) {
    image_angle+= 5;
    rotate_angle-=5;
    if(rotate_angle==0) {
        rotate = 0;
        rotate_angle = 90;
        position_line = 1- position_line; 
    }

}

var pipe_orientation = position_line;
var pipe_x = x;
var pipe_y = y;
var connected = 0


with(obj_pipe_L) {
    if(pipe_orientation==1) {
    //Check if above pipe_L is vertical
        if((x==pipe_x)&amp;&amp;(y==pipe_y-92)) {
            if(position_L&gt;=2) {
                if(sprite_index==spr_pipe_L_g)
                    connected = 1;
            }
            
        }
    //Check if below pipe is vertical
        if((x==pipe_x)&amp;&amp;(y==pipe_y+92)) {
            if(position_L&lt;=1) {
                if(sprite_index==spr_pipe_L_g)
                    connected = 1;
            }
        }
    }
    else {
        //Check if right pipe is horizontal
        if((x==pipe_x+92)&amp;&amp;(y==pipe_y)) {
            if((position_L==1)||(position_L==2)) {
                if(sprite_index==spr_pipe_L_g)
                    connected = 1;
            }
        }
        //Check if left pipe is horizontal
        if((x==pipe_x-92)&amp;&amp;(y==pipe_y)) {
            if((position_L==0)||(position_L==3)) {
                if(sprite_index==spr_pipe_L_g)
                    connected = 1;
            }
        }
    }

}
with(obj_pipe_line) {
    if(pipe_orientation==1) {
    //Check if above pipe is vertical
        if((x==pipe_x)&amp;&amp;(y==pipe_y-64)) {
            if(position_line==1) {
                if(sprite_index==spr_pipe_line_g)
                    connected = 1;
            }
            
        }
    //Check if below pipe is vertical
        if((x==pipe_x)&amp;&amp;(y==pipe_y+64)) {
            if(position_line==1) {
                if(sprite_index==spr_pipe_line_g)
                    connected = 1;
            }
        }
    }
    else {
        //Check if right pipe is horizontal
        if((x==pipe_x+64)&amp;&amp;(y==pipe_y)) {
            if(position_line==0) {
                if(sprite_index==spr_pipe_line_g)
                    connected = 1;
            }
        }
        //Check if left pipe is horizontal
        if((x==pipe_x-64)&amp;&amp;(y==pipe_y)) {
            if(position_line==0) {
                if(sprite_index==spr_pipe_line_g)
                    connected = 1;
            }
        }
    }
}
var angle = image_angle;
if(connected == 1) {
    sprite_index = spr_pipe_line_g;
}
else {
    sprite_index = spr_pipe_line;
}
image_angle = angle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rotate = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
